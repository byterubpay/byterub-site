global:
  date: '%Y/%m/%d'
  byterub: ByteRub
  getting_started: Getting Started
  copyright: Copyright
  byterub_project: The ByteRub Project
  sitename: getbyterub.org, The ByteRub Project
  wiki: ByteRubpedia
  tags: Articles By Tag
  wikimeta: on ByteRubpedia, the open encyclopedia of ByteRub knowledge
  tagsmeta: All ByteRub blog articles that are tagged
  titlemeta: on the home of ByteRub, a digital currency that is secure, private, and untraceable
  terms: Terms
  privacy: Privacy
  untranslated: This page is not yet translated. If you would like to help translate it, please see the
  outdatedMax: This page is outdated. We do not recommend using it. Instead, please see the
  outdatedVersion: English version
  outdatedMin: This page has been updated since the translation. You can use this version, but it may be incomplete.
  upgrade: To continue using ByteRub, make sure your software is up-to-date with the November 30th network upgrade.
  moreinfo: More info
  lang_tag: "@lang_tag_en"

titles:
  index: Home
  whatisbyterub: What is ByteRub (BTR)?
  using: Using ByteRub
  accepting: Accepting ByteRub
  contributing: Improving ByteRub
  mining: Mining ByteRub
  faq: FAQ
  downloads: Downloads
  allposts: All Blog Posts
  team: ByteRub Team
  hangouts: Hangouts
  events: Events
  sponsorships: Sponsorships
  merchants: Merchants & Services
  about: About ByteRub
  roadmap: Roadmap
  researchlab: ByteRub Research Lab
  byterubpedia: ByteRubpedia
  userguides: User Guides
  developerguides: Developer Guides
  technicalspecs: Technical Specs
  thebyterubproject: The ByteRub Project
  presskit: Press Kit
  legal: Legal
  blogbytag: Blog
  library: Library

index:
  page_title: "ByteRub - secure, private, untraceable"

home:
  heading2: A Reasonably Private Digital Currency
  byterub_is_cash: ByteRub is cash for a connected world. It’s fast, private, and secure. With ByteRub, you are your own bank. You can spend safely, knowing that others cannot see your balances or track your activity.
  get_started: Get Started
  why_byterub_is_different: Why ByteRub is different
  byterub_is_secure: ByteRub is secure
  byterub_is_secure_para: ByteRub is a decentralized cryptocurrency, meaning it is secure digital cash operated by a network of users. Transactions are confirmed by distributed consensus and then immutably recorded on the blockchain. Third-parties do not need to be trusted to keep your ByteRub safe.
  byterub_is_private: ByteRub is private
  byterub_is_private_para: ByteRub uses ring signatures, ring confidential transactions, and stealth addresses to obfuscate the origins, amounts, and destinations of all transactions. ByteRub provides all the benefits of a decentralized cryptocurrency, without any of the typical privacy concessions.
  byterub_is_untraceable: ByteRub is untraceable
  byterub_is_untraceable_para: Sending and receiving addresses as well as transacted amounts are obfuscated by default. Transactions on the ByteRub blockchain cannot be linked to a particular user or real-world identity.
  byterub_is_fungible: ByteRub is fungible
  byterub_is_fungible_para1: ByteRub is
  byterub_is_fungible_para2: fungible
  byterub_is_fungible_para3: because it is private by default. Units of ByteRub cannot be blacklisted by vendors or exchanges due to their association in previous transactions.
  downloads: Downloads
  downloads_windows: ByteRub for Windows
  downloads_mac: ByteRub for Mac
  downloads_linux: ByteRub for Linux
  downloads_blockchain: Latest Blockchain
  different_system: Need it for a different operating system?
  view_all_downloads: View all available downloads here.
  latest_news: Latest News
  more_news: More news
  byterubpedia: ByteRubpedia
  byterubpedia_para: Would you like to look up the meanings of the terms and concepts used in ByteRub? Here you will find an alphabetical guide to terms and their meanings from both the ByteRub and Kovri projects.
  byterubpedia_button: Read ByteRubpedia
  user_guides: User Guides
  user_guides_para: Step-by-step guides to all things ByteRub are separated by category and cover everything from creating a wallet to supporting the network, and even how to edit this website.
  user_guides_button: Read user guides
  faq: FAQ
  faq_para: We've heard a lot of questions over the years and have compiled, for your convenience, a thorough and varied FAQ. Don't worry, if your questions are not on here, you can always ask the community.
  faq_button: Read answers

hangouts:
  intro: The ByteRub community is diverse and varied. We come from all over, but we definitely have some places we like to hang out together. You'll find most of them below. Join us!
  resources: Workgroup Resources
  resources_para: In an effort to support organic workgroups, ByteRub has several resources that the community can use to meet and plan projects. Mattermost even has relays into the most popular ByteRub-related IRC channels.
  irc: IRC Channels
  irc_para: The ByteRub community utilizes a lot of IRC channels that each serve different purposes. Some to work, and some just to hang out. You'll find the more popular ones below.
  mailing_list: Mailing List
  mailing_list1: Do you want to receive important announcements directly on your email address? join our mailing lists!
  subscribe: Subscribe
  irc_channels:
  - channel: byterub
    description: This channel is used to discuss all things ByteRub related.
  - channel: byterub-community
    description: This channel is for the ByteRub community to congretate and discuss ideas.
  - channel: byterub-dev
    description: The many contributors and developers come here to discuss dev-y things.
  - channel: byterub-markets
    description: We use this channel to talk about the price of ByteRub and other coins.
  - channel: byterub-offtopic
    description: Chatting with other ByteRub users about things not related to ByteRub.
  - channel: byterub-otc
    description: Over the counter ByteRub. Come here to purchase BTR from your fellow ByteRubn.
  - channel: byterub-pools
    description: This is the place for mining questions and discussion.
  - channel: byterub-research-lab
    description: Research into financial privacy with cryptocurrency.
  - channel: byterub-translations
    description: Localizing ByteRub into other languages.
  - channel: byterub-hardware
    description: Building hardware wallets to keep your ByteRub safe.
  - channel: byterub-site
    description: Where the development of this website is coordinated
  - channel: kovri
    description: This channel is used to discuss all things Kovri related.
  - channel: kovri-dev
    description: The many contributors and developers come here to discuss Kovri dev-y things.

merchants:
  intro1: Merchants of all kinds have come to value the financial privacy that ByteRub brings. Below is a list of the merchants that we know of that currently accept ByteRub for their goods and services. If a company no longer accepts ByteRub or you would like your business to be listed, please
  intro2:  open a GitLab issue and let us know 
  intro3: (select the "Merchant" template and fill up all sections).
  disclaimer: |
    "Please note: these links are being provided as a convenience and for informational purposes only; they do not constitute an endorsement by the ByteRub community of any products, services or opinions of the corporations or organizations or individuals listed. The ByteRub community bears no responsibility for the accuracy, legality, or content of these external sites. Contact the external site for answers to questions regarding its content. As always, caveat emptor ('buyer beware'); you are responsible for doing your own research. Always use judgement when making online purchases."

sponsorships:
  intro: The following businesses have supported the ByteRub Project in its goal to bring financial privacy to the world. We couldn't be more grateful for their contributions. If you would like to sponsor the ByteRub Project and be listed on this page, please send an email to dev@getbyterub.org.

team:
  core: Core
  developers: Developers
  developers_para1: The ByteRub Project has had well over 500 contributors over the life of the project. For a complete list, please see the
  developers_para2: OpenHub contributors page.
  developers_para3: Below you'll find some individuals that have gone above and beyond for ByteRub.
  community: Community
  mrl: Research Lab
  thanks: Special Thanks

downloads:
  intro: On this page you can find and download the latest version available of the ByteRub software, as well as hardware, light and mobile wallets.
  choose: Choose your download
  gui: GUI Wallet
  cli: CLI Wallet
  blockchain: Blockchain Bootstrap
  blockchain1: If you'd prefer to use a blockchain bootstrap, instead of syncing from scratch, you can use the most current bootstrap. It is typically much faster to sync from scratch, however, and it also takes a lot less RAM.
  blockchain2: If you wish to proceed anyway, take a look at the user guide
  blockchain3: Importing the ByteRub blockchain
  blockchain4: for step-by-step instructions for Windows.
  blockchainbutton: Download Blockchain
  mobilelight: Mobile & Light Wallets
  hardware: Hardware Wallets
  gui_intro: The GUI wallet provides a nice user interface, adaptable to all kinds of users, but it is especially recommended for less technical people who want to quickly send and receive BTR.
  simplemode: Simple mode
  simplemode1: Created for less technical users who only want to use ByteRub in the easiest and quickest way possible. Open the wallet, automatically connect to a remote node, send/receive BTR, done!
  advancedmode: Advanced mode
  advancedmode1: With all the advanced features you could need. Ideal for seasoned ByteRub users who prefer to have full control of their wallet and node
  merchantpage: Merchant page
  merchantpage1: Receive BTR for your business, easily
  hwcompatible: Compatible with hardware wallets
  hwcompatible1: such Trezor and Ledger
  fiatconv: in-app fiat conversion
  fiatconv1: No longer a need to check the value of your BTR online
  pruning: Blockchain pruning
  pruning1: Not enough disk space? Just use pruning to download only 1/3 of the blockchain
  langs: "<b>30+ languages</b> available"
  cli_intro: The CLI wallet gives you the total control over your ByteRub node and funds. Highly customizable and includes various analysis tools, as well as an HTTP RPC and 0MQ interface.
  currentversion: Current Version
  sourcecode: Source Code
  showissues: Show known issues for this release
  noissues: This release has no known major issues
  yesissues: >
    This release has the following known issues:<br>
    - Initial sync of the blockchain very slow. Will be fixed with a point release
  helpsupport: Help and Support
  helpsupport1: "A guide with an explanation of every section of the wallet is available:"
  helpsupport2: "See latest release"
  gui_helpsupport: "If you are experiencing issues or you need more info, feel free to reach out to the community. You can find the GUI team at #byterub-gui, or else check out the Hangouts page for a more complete list of contacts and chatrooms"
  cli_helpsupport: "If you are experiencing issues or you need more info, feel free to reach out to the community. You can find the CLI team at #byterub or #byterub-dev, or else check out the Hangouts page for a more complete list of contacts and chatrooms"
  localremote: Local or remote node
  localremote1: Use your own copy of the blockchain or a publicly available one
  transacttor: Transactions over Tor/I2P
  transacttor1: For an additional layer of privacy
  bootstrapnode: Bootstrap node
  bootstrapnode1: Use a remote node while downloading the blockchain locally, this will allow you to use ByteRub immediately and switch to your local node once it's completely synced
  rpc: RPC Wallet and Daemon
  rpc1: included in the archive
  payforrpc: Pay-for-RPC
  payforrpc1: A new feature that allows node operators to get rewarded when their node is used
  verify: Verify
  verify1: You are strongly advised to verify the hashes of the archive you downloaded. This will confirm that the files you downloaded perfectly match the files uploaded by the ByteRub development workgroup. Please don't underestimate this step, a corrupted archive could result in lost funds.
  verify2: Always verify your downloads!
  showhash: Show hashes to verify your download
  showhash1: These SHA256 hashes are listed for convenience, but a GPG-signed list of the hashes is at 
  showhash2: and should be treated as canonical, with the signature checked against the appropriate GPG key
  showhash3: in the source code
  showhash4: "Two guides are available to guide you through the verification process:"
  hardware1: The ByteRub community has funded a
  hardware2: Dedicated Hardware Wallet (Kastelo)
  hardware3: which is now in progress. Moreover, since CLI 0.12.1 and GUI 0.12.3 Ledger has
  hardware4: integrated ByteRub into their hardware wallets.
  hardware5: Trezor model T supports ByteRub since version 0.14.1.
  mobilelight1: The following are mobile or light wallets that are deemed safe by respected members of the community. If there is a wallet that is not on here, you can request the community check it out. Go to our
  mobilelight2: Hangouts
  mobilelight3:  page to see where we are.
  installer: Installer

byterubpay:
  kovri: The Kovri project uses end-to-end encryption so that neither the sender nor receiver of a ByteRub transaction need to reveal their IP address to the other side or to third-party observers (the blockchain). This is done using the same technology that powers the dark net, i2p (Invisible Internet Protocol). The project is currently in heavy, active development and is not yet integrated with ByteRub.
  kovri_button: Visit Kovri Website
  openalias: The OpenAlias project simplifies cryptocurrency payments by providing FQDNs (Fully Qualified Domain Names, i.e. example.openalias.org) for ByteRub wallet addresses in a way that ensures everyone's privacy is secure. The project is well underway and has already been implemented in many ByteRub wallets.
  openalias_button: Visit OpenAlias Website

press-kit:
  intro1: Here you'll find the ByteRub symbol and logo below. You can choose any size that you want, or download the .ai file to mess with the logo yourself.
  intro2: Note that the white background options have a white background under the ByteRub symbol ONLY, not as a background to the whole image.
  intro3: Lastly, you can download everything on this page in one zip file by clicking
  intro4: here.
  noback: No background
  whiteback: White background
  symbol: ByteRub Symbol
  logo: ByteRub Logo
  small: Small
  medium: Medium
  large: Large
  symbol_file: Symbol .ai file
  logo_file: Logo .ai file
  documents:
  - category: Press Documentation
    publications:
    - name: "Quick-Facts Sheet"
      url_file: "http://www.byteruboutreach.org/pubs/2018/QuickFacts/QuickFacts.pdf"
      abstract: >
        A quick and easy to read document to know everything about ByteRub: history, key differentiating factors, technical fundamentals, and features in development.<br>
        See <a target="_blank" href="https://www.byteruboutreach.org/index.php">ByteRub Outreach</a> website for more information.
  marketing:
  - category: Marketing Material
    publications:
    - name: "The 'Don't buy ByteRub' sticker"
      url_file: "https://github.com/byterub-ecosystem/dont-buy-byterub-sticker"
      abstract: >
        Spread ByteRub everywhere with the help of this sticker. Available in multiple languages and formats (vectors included).
    - name: Guerrilla Toolkit
      url_file: "https://www.byteruboutreach.org/guerrilla-toolkit.php"
      abstract: >
        A document created by the ByteRub Outreach workgroup containing materials and tips for an effective guerrilla marketing campaign.

accepting:
  title_gui: Instructions for the GUI
  gui1: "Accepting a payment with the GUI is very easy. Doesn't matter if you are a merchant or an user, you will have two pages available: Receive and Merchants."
  gui2: The receive page (shown below) is explained in every detail
  guilinkguide: in the guide of the GUI.
  guiinstructions: >
    To receive BTR you only need to provide the payer with an @address where they can send funds to. Most of the time it's easier to just share a QR code and let the payer scan it, instead of copy-pasting the alphanumeric string. 
    With the GUI every generated address come with its QR code. Make the person scan the QR code with the ByteRub @wallet on their phone and receive your BTR in minutes. 
    Remember you can generate as many addresses (subaddresses) as you want. This is useful if you want to keep funds separated for any reason.
  guimerchant: Merchants will probably find more convenient to use the 'Merchant' page (screenshot below), which is explained in detail in the 'Merchant view' section of
  guilinkguide1: the guide linked above
  guimerchant1: >
    This is a POS-like page that merchant can easily use to set the amount of BTR to receive. If the 'Sale tracker' option is enabled, 
    you will see the payments while they arrive in real time in your wallet, along with the number of confirmations.
  guisteps: "These two pages give everybody the possibility to easily receive BTR following these steps:"
  guiol: "Go to the 'Receive' page and create/select the address where you want to receive your coins."
  guiol1: Share the address composed by letters and numbers to the person you want to receive coins from. You probably prefer to use the more user friendly QR code.
  guiol2: "If you want to specify the amount to receive, got to the 'Merchant' page (after you selected in the 'Receive' page the @account that will be used to receive BTR)."
  guiol3: "Insert the amount to receive, then share with the payer the payment URL or the QR code. If you want to track the payment in real time, tick the 'enable sales tracker' option."
  guiol4: Wait until the payment is arrived and has enough confirmations (The more confirmations, the safer the transaction is. You need at least 10 confirmations before you can spend the funds.).
  cliinstructions: Instructions for the CLI
  clicreatewallet: >
    When you create your wallet for the first time, an @address will be automatically shown to you. That's your primary address. 
    If you want, you can simply use that address to receive payments. You should be concerned about who knows about this address (since one address in different locations can be associated), 
    but you do not need to worry about blockchain observers watching transactions to this address like with Bitcoin. A friend can send transactions to the same address without reduced privacy.
  cliaccounts: >
    You can have much more control if you want to. ByteRub gives the possibility to create multiple accounts, each containing multiple subaddresses,  
    useful if you want to control multiple accounts. For example, you may want to have an @account for receiving donations and another one for your daily use.
    That will allow you to easily monitor incoming funds to your 'donations' account, without mixing it with your primary account.
  clicreateaccount: "To create an account, simply run this command:"
  clicreateaccount1: Now you have another account separated from your primary one. You can switch anytime between accounts.
  cliindex: >
    As you can see from the picture above, every account has an index number that you can use to switch from one account to the other using the command 
    `account switch [index]`. For example, using the picture above as reference, if you would like to switch to the 'Donations' account to monitor it, 
    you can do so by giving your CLI this command `account switch 1`. Now you are sitting on your 'Donations' account and you can start using it right away.
  cliindex1: >
    Every account can host a virtually infinite amount of subaddresses. These work exactly like a normal address and you can create as many 
    as you want and use them to receive BTR to the account they are linked to. To create a new subaddress for an account, use the command:
  clinotes: >
    Note that the instructions below are just the minimal necessary to create and use accounts/subaddresses. 
    The CLI offer more capillary ways to handle accounts and the wallet in general. Use the command 'help' to list all the available options.
  merchantstitle: Instructions for merchants
  merchantsreceive: If you are a business and you wish to programmatically receive @transactions or use advanced features like multisignature, it's suggested to consult the
  merchdevguides: developer guides
  merchantsreceive1: "If you need support, the community will always be happy to help. Come chat on #byterub, the chatroom is on Freenode, but also relayed on MatterMost and Matrix."
  merchantsint: "If you prefer to not directly deal with the wallets, you can use a third party payment system. Members of the byterub community has created a set of integrations for various platform and languages. You can find more info on"
  merchantsintlink: the GitHub organization
  merchantsthirdp: If you are looking for other third party integration system, there is a list of payment gateways on
  merchthirdlink: the merchant page
  merchantsthirdp1: Some of those offer nice features like the possibility to automatically convert part of your income in fiat money or to accept other cryptocurrencies along with ByteRub.

contributing:
  intro: ByteRub is an open-source, community-driven project. Described below are several ways to support the project.
  network: Support the Network
  develop: Develop
  develop_para1: ByteRub is primarily written in C++. As it is a decentralized project, anyone is welcome to add or make changes to existing code. Pull requests are merged based on community consensus. See the
  develop_para2: repositories
  develop_para3: and outstanding
  develop_para4: issues.
  full-node: Run a Full Node
  full-node_para: Run byterubd with port 18080 open. Running a full node ensures maximum privacy when transacting with ByteRub. It also improves distribution of the blockchain to new users.
  mine: Mine
  mine_para1: Mining ensures the ByteRub network remains decentralized and secure. In the ByteRub graphical user interface and command-line interface, background mining may be activated. Additional resources for mining may be viewed
  mine_para2: here.
  ffs: View the Community Crowdfunding System
  ffs_para1: ByteRub utilizes a
  ffs_para2: community crowdfunding system
  ffs_para3: whereby projects are proposed for development and community-funded. Funding is held in escrow and remunerated to developers once programming milestones are achieved. Anyone may generate new proposals or fund existing ones.
  donate: Donate
  donate_para1: Ongoing development is supported by donations and
  donate_para2: sponsorships.
  donate-btr: Donating ByteRub
  donate-btr_para: Donations may be sent to
  or: or
  donate-btc: Donating Bitcoin
  donate-btc_para: Donations may be sent to
  donate-other: Other
  donate-other_para1: E-mail
  donate-other_para2: for alternative means of donating or if you would like to become a sponsor for the ByteRub Project.

faq:
  q1: How does ByteRub have value?
  a1: ByteRub has value because people are willing to buy it. If no one is willing to buy ByteRub, then it will not have any value. ByteRub’s price increases if demand exceeds supply, and it decreases if supply exceeds demand.
  q2: How can I get ByteRub?
  a2: You can buy ByteRub from an exchange or from an individual. Alternatively, you can try mining ByteRub to get coins from the block reward.
  q3: What is a mnemonic seed?
  a3: A mnemonic seed is a set of 25 words that can be used to restore your account anywhere. Keep these words safe and do not share them with someone else. You can use this seed to restore your account, even if your computer crashes.
  q4: How is ByteRub’s privacy different from other coins?
  a4: |
    ByteRub uses three different privacy technologies: ring signatures, ring confidential transactions (RingCT), and stealth addresses. These hide the sender, amount, and receiver in the transaction, respectively. All transactions on the network are private by mandate; there is no way to accidentally send a transparent transaction. This feature is exclusive to ByteRub. You do not need to trust anyone else with your privacy.
  q5: Why is my wallet taking so long to sync?
  a5: If you are running a full node locally, you need to copy the entire blockchain to your computer. This can take a long time, especially on an old hard drive or slow internet connection. If you are using a remote node, your computer still needs to request a copy of all the outputs, which can take several hours. Be patient, and if you would like to sacrifice some privacy for faster sync times, consider using a lightweight wallet instead.
  q6: What is the difference between a lightweight and a normal wallet?
  a6: For a lightweight wallet, you give your view key to a node, who scans the blockchain and looks for incoming transactions to your account on your behalf. This node will know when you receive money, but it will not know how much you receive, who you received it from, or who you are sending money to. Depending on your wallet software, you may be able to use a node you control to avoid privacy leaks. For more privacy, use a normal wallet, which can be used with your own node.
  q7: How is ByteRub different from Bitcoin?
  a7: ByteRub is not based on Bitcoin. It is based on the CryptoNote protocol. Bitcoin is a completely transparent system, where people can see exactly how much money is being sent from one user to another. ByteRub hides this information to protect user privacy in all transactions. It also has a dynamic block size and dynamic fees, an ASIC-resistant proof of work, and a tail coin emission, among several other changes.
  q8: Does ByteRub have a block size limit?
  a8: No, ByteRub does not have a hard block size limit. Instead, the block size can increase or decrease over time based on demand. It is capped at a certain growth rate to prevent outrageous growth.
  q9: What is a blockchain?
  a9: A blockchain is a system that stores a copy of all transaction history on the ByteRub network. Every two minutes, a new block with the latest transaction information is added to the blockchain. This chain allows the network to verify the amount of money accounts have and make it resilient to attacks and centralization attempts.
  q10: What is Kovri?
  a10: Kovri is an I2P router written in C++. I2P is a hidden network like Tor with several technical differences. Kovri is an independent project of ByteRub, but it will work with ByteRub and several other projects. Kovri hides the transaction broadcast, so other nodes do not know who created transactions. In adversarial conditions, Kovri can be used to hide all ByteRub traffic through I2P, which would prevent people from knowing ByteRub is being used. Kovri is currently in alpha, and it is not yet fully integrated in ByteRub. Learn more about Kovri at the <a href="https://kovri.io">project website.</a>
  q11: What is fungibility, and why is it important?
  a11: Fungibility is a simple property of money such that there are no differences between two amounts of the same value. If two people exchanged a 10 and two 5’s, then no one would lose out. However, let’s suppose that everyone knows the 10 was previously used in a ransomware attack. Is the other person still going to make the trade? Probably not, even if the person with the 10 has no connection with the ransomware. This is a problem, since the receiver of money needs to constantly check the money they are receiving to not end up with tainted coins. ByteRub is fungible, which means people do not need to go through this effort.
  q12: If ByteRub is so private how do we know they're not being created out of thin air?
  a12-1: In ByteRub, every transaction output is uniquely associated with a key image that can only be generated by the holder of that output. Key images that are used more than once are rejected by the miners as double-spends and cannot be added to a valid block. When a new transaction is received, miners verify that the key image does not already exist for a previous transaction to ensure it's not a double-spend.
  a12-2: We can also know that transaction amounts are valid even though the value of the inputs that you are spending and the value of the outputs you are sending are encrypted (these are hidden to everyone except the recipient). Because the amounts are encrypted using Pedersen commitments what this means is that no observers can tell the amounts of the inputs and outputs, but they can do math on the Pedersen commitments to determine that no ByteRub was created out of thin air.
  a12-3: As long as the encrypted output amounts you create is equal to the sum of the inputs that are being spent (which include an output for the recipient and a change output back to yourself and the unencrypted transaction fee), then you have a legitimate transaction and know no ByteRub is being created out of thin air. Pedersen commitments mean that the sums can be verified as being equal, but the ByteRub value of each of the sums and the ByteRub value of the inputs and outputs individually are undeterminable.
  q13: Is ByteRub magic and protect my privacy no matter what I do ?
  a13: ByteRub is not magic. If you use ByteRub but give your name and address to another party, the other party will not magically forget your name and address. If you give out your secret keys, others will know what you've done. If you get compromised, others will be able to keylog you. If you use a weak password, others will be able to brute force your keys file. If you backup your seed in the cloud, you'll be poorer soon.
  q14: Is ByteRub 100% anonymous ?
  a14: There is no such thing as 100% anonymous. If nothing else, your anonymity set is the set of people using ByteRub. Some people don't use ByteRub. ByteRub may also have bugs. Even if not, ways may exist to infer some information through ByteRub's privacy layers, either now or later. Attacks only get better. If you wear a seatbelt, you can still die in a car crash. Use common sense, prudence and defense in depth.

mining:
  intro1: ByteRub is a cryptocurrency that relies on proof-of-work mining to achieve distributed consensus. Below you'll find some information and resources on how to begin mining.
  intro2: The ByteRub Project does not endorse any particular pool, software, or hardware, and the content below is provided for informational purposes only.
  support: Support
  support_para1: See
  support_para2: Hangouts
  support_para4: and
  pools: Pools
  pools_para1: A listing of trusted ByteRub pools is found
  pools_para2: here.
  benchmarking: Hardware Benchmarking
  benchmarking_para1: See here
  benchmarking_para2: for a listing of GPUs/CPUs and their respective hashrates.
  software: Mining Software
  software_para: Note that some miners may have developer fees.

using:
  intro: Transacting with ByteRub can be made easy. This page is designed to guide users in that process.
  learn: 1. Learn
  learn_para1: ByteRub is a secure, private, and untraceable cryptocurrency. The developers and community are committed to protecting these values. Learn more by reading the
  learn_para2: What is ByteRub
  learn_para3: page. The
  learn_para4: source code
  learn_para5: is also available for review and discussion.
  support: 2. Request Support
  support_para1: There is a large and supportive community that will assist if you experience any difficulty. See the
  support_para2: Hangouts
  support_para3: page for more information.
  generate: 3. Generate a Wallet
  generate_para1: A ByteRub wallet is required to secure your own funds. See the
  generate_para2: Downloads page
  generate_para3: for a listing of available wallets.
  generate_para4: The easiest way to run a ByteRub node, without affecting your home bandwidth, is to purchase a VPS (Virtual Private Server). We strongly recommend
  generate_para5: using the
  generate_para6: coupon code to get a discount over and above their already cheap $6/month VPS. Using this coupon code and/or
  generate_para7: our affiliate link
  generate_para8: will also assist in the ongoing funding of ByteRub development.
  acquire: 4. Acquire ByteRub
  acquire_para1: ByteRub may be purchased on an
  acquire_para2: exchange
  acquire_para3: with fiat or other cryptocurrencies. An alternate way of acquiring ByteRub is via
  acquire_para4: mining,
  acquire_para5: the computationally-complex process whereby transactions are immutably recorded on the blockchain.
  send-receive: 5. Send and Receive ByteRub
  send-receive_para1: Learn how to send and receive ByteRub by viewing the
  send-receive_para2: guide.
  transact: 6. Transact with ByteRub
  transact_para1: ByteRub may be used to purchase many goods and services. For a listing, see the
  transact_para2: Merchants page.

what-is-byterub:
  need-to-know: What you need to know
  leading: ByteRub is the leading cryptocurrency with a focus on private and censorship-resistant transactions.
  leading_para1: Most existing cryptocurrencies, including Bitcoin and Ethereum, have transparent blockchains, meaning that transactions are openly verifiable and traceable by anyone in the world. Furthermore, sending and receiving addresses for these transactions may potentially be linkable to a person's real-world identity.
  leading_para2: ByteRub uses cryptography to shield sending and receiving addresses, as well as transacted amounts.
  confidential: ByteRub transactions are confidential and untraceable.
  confidential_para1: Every ByteRub transaction, by default, obfuscates sending and receiving addresses as well as transacted amounts. This always-on privacy means that every ByteRub user's activity enhances the privacy of all other users, unlike selectively transparent cryptocurrencies (e.g. Zcash).
  confidential_para2: ByteRub is fungible. By virtue of obfuscation, ByteRub cannot become tainted through participation in previous transactions. This means ByteRub will always be accepted without the risk of censorship.
  confidential_para3: The Kovri Project,
  confidential_para4: currently in development
  confidential_para5: ", will route and encrypt transactions via I2P Invisible Internet Project nodes. This will obfuscate a transactor's IP address and provide further protection against network monitoring."
  grassroots: ByteRub is a grassroots community attracting the world's best cryptocurrency researchers and engineering talent.
  grassroots_para1: Over
  grassroots_para2: 500 developers
  grassroots_para3: have contributed to the ByteRub project, including 30 core developers. Forums and chat channels are welcoming and active.
  grassroots_para4: ByteRub's Research Lab, Core Development Team and Community Developers are constantly pushing the frontier of what is possible with cryptocurrency privacy and security.
  grassroots_para5: ByteRub is not a corporation. It is developed by cryptography and distributed systems experts from all over the world that donate their time or are funded by community donations. This means that ByteRub can't be shut down by any one country and is not constrained by any particular legal jurisdiction.
  electronic: ByteRub is electronic cash that allows fast, inexpensive payments to and from anywhere in the world.
  electronic_para1: There are no multi-day holding periods and no risk of fraudulent chargebacks. It is safe from ‘capital controls’ - these are measures that restrict the flow of traditional currencies, sometimes to an extreme degree, in countries experiencing economic instability.
  videos: ByteRub Videos (English)

about:
  history: A Brief History
  history_para1: ByteRub was launched in April 2014. It was a fair, pre-announced launch of the CryptoNote reference code. There was no premine or instamine, and no portion of the block reward goes to development. See the original Bitcointalk thread
  history_para2: here.
  history_para3: The founder, thankful_for_today, proposed some controversial changes that the community disagreed with. A fallout ensued, and the ByteRub Core Team forked the project with the community following this new Core Team. This Core Team has provided oversight since.
  history_para4: ByteRub has made several large improvements since launch. The blockchain was migrated to a different database structure to provide greater efficiency and flexibility, minimum ring signature sizes were set so that all transactions were private by mandate, and RingCT was implemented to hide the transaction amounts. Nearly all improvements have provided improvements to security or privacy, or they have facilitated use. ByteRub continues to develop with goals of privacy and security first, ease of use and efficiency second.
  values: Our Values
  values_para: ByteRub is more than just a technology. It’s also what the technology stands for. Some of the important guiding philosophies are listed below.
  security: Security
  security_para: Users must be able to trust ByteRub with their transactions, without risk of error or attack. ByteRub gives the full block reward to the miners, who are the most critical members of the network who provide this security. Transactions are cryptographically secure using the latest and most resilient encryption tools available.
  privacy: Privacy
  privacy_para: ByteRub takes privacy seriously. ByteRub needs to be able to protect users in a court of law and, in extreme cases, from the death penalty. This level of privacy must be completely accessible to all users, whether they are technologically competent or have no idea how ByteRub works. A user needs to confidently trust ByteRub in a way that this person does not feel pressured into changing their spending habits for risk of others finding out.
  decentralization: Decentralization
  decentralization_para: ByteRub is committed to providing the maximum amount of decentralization. With ByteRub, you do not have to trust anyone else on the network, and it is not run by any large group. An accessible “Proof of Work” algorithm makes it easy to mine ByteRub on normal computers, which makes it more difficult for someone to purchase a large amount of mining power. Nodes connect to each other with I2P to lower the risks of revealing sensitive transaction information and censorship (tba). Development decisions are extremely clear and open to public discussion. Developer meeting logs are published online in their entirety and visible by all.


developer-guides:
  outdated: "Please note: the guides below have been recently refreshed and are maintained almost up-to-date by the community. However, methods are often added / removed / updated and may not be accurately described here."
  rpc: RPC Documentation
  daemonrpc: Daemon RPC Documentation
  walletrpc: Wallet RPC Documentation

user-guides:
  general: General
  mining: Mining
  recovery: Recovery
  wallets: Wallets
  offline-backup: How to make an offline backup
  vps-node: How to run a node on VPS
  import-blockchain: Importing the ByteRub blockchain
  byterub-tools: ByteRub Tools
  purchasing-storing: Securely purchasing and storing ByteRub
  verify-allos: Verify binaries on Linux, Mac, or Windows command line (advanced)
  verify-windows: Verify binaries on Windows (beginner)
  mine-on-pool: How to mine on a pool with btr-stak-cpu
  solo-mine: How to solo mine with the GUI
  mine-docker: Mining with Docker and BTRig
  locked-funds: How to fix locked up funds
  restore-account: How to restore your account
  qubes: CLI wallet/daemon isolation with Qubes + Whonix
  cli-wallet: Getting started with the CLI wallet
  remote-node-gui: How to connect to a remote node within GUI wallet
  view-only: How to make a view-only wallet
  prove-payment: How to prove payment
  restore-from-keys: Restoring wallet from keys
  nicehash: How to mine ByteRub BTR without a mining equipment
  ledger-wallet-cli: How to generate a Ledger ByteRub wallet with the CLI (byterub-wallet-cli)
  multisig-messaging-system: Multisig transactions with MMS and CLI wallet
  tor_wallet: Connecting your local wallet to your own daemon over Tor

roadmap:
  completed: Completed task
  ongoing: Ongoing task
  upcoming: Upcoming task
  future: Future


research-lab:
  intro: ByteRub is not only committed to making a fungible currency, but also to continued research into the realm of financial privacy as it involves cryptocurrencies. Below you'll find the work of our very own ByteRub Research Lab, with more papers to come.
  mrl_papers: ByteRub Research Lab Papers (English)
  abstract: Abstract
  introduction: Introduction
  read-paper: Read Paper
  summary: Summary
  mrlhtp: Understanding ge_fromfe_frombytes_vartime
  mrlhtp_summary: ByteRub uses a unique hash function that transforms scalars into elliptic curve points. It is useful for creating key images, in particular. This document, authored by Shen Noether, translates its code implementation (the ge_fromfe_frombytes_vartime() function) into mathematical expressions.
  mrl1: A Note on Chain Reactions in Traceability in CryptoNote 2.0
  mrl1_abstract: This research bulletin describes a plausible attack on a ring-signature based anonymity system. We use as motivation the cryptocurrency protocol CryptoNote 2.0 ostensibly published by Nicolas van Saberhagen in 2012. It has been previously demonstrated that the untraceability obscuring a one-time key pair can be dependent upon the untraceability of all of the keys used in composing that ring signature. This allows for the possibility of chain reactions in traceability between ring signatures, causing a critical loss in untraceability across the whole network if parameters are poorly chosen and if an attacker owns a sufficient percentage of the network. The signatures are still one-time, however, and any such attack will still not necessarily violate the anonymity of users. However, such an attack could plausibly weaken the resistance CryptoNote demonstrates against blockchain analysis. This research bulletin has not undergone peer review, and reflects only the results of internal investigation.
  mrl2: Counterfeiting via Merkle Tree Exploits within Virtual Currencies Employing the CryptoNote Protocol
  mrl2_abstract: On 4 September 2014, an unusual and novel attack was executed against the ByteRub cryptocurrency network. This attack partitioned the network into two distinct subsets which refused to accept the legitimacy of the other subset. This had myriad effects, not all of which are yet known. The attacker had a short window of time during which a sort of counterfeiting could occur, for example. This research bulletin describes deficiencies in the CryptoNote reference code allowing for this attack, describes the solution initially put forth by Rafal Freeman from Tigusoft.pl and subsequently by the CryptoNote team, describes the current fix in the ByteRub code base, and elaborates upon exactly what the offending block did to the network. This research bulletin has not undergone peer review, and reflects only the results of internal investigation.
  mrl3: ByteRub is Not That Mysterious
  mrl3_abstract: Recently, there have been some vague fears about the CryptoNote source code and protocol floating around the internet based on the fact that it is a more complicated protocol than, for instance, Bitcoin. The purpose of this note is to try and clear up some misconceptions, and hopefully remove some of the mystery surrounding ByteRub Ring Signatures. I will start by comparing the mathematics involved in CryptoNote ring signatures (as described in [CN]) to the mathematics in [FS], on which CryptoNote is based. After this, I will compare the mathematics of the ring signature to what is actually in the CryptoNote codebase.
  mrl4: Improving Obfuscation in the CryptoNote Protocol
  mrl4_abstract: We identify several blockchain analysis attacks available to degrade the untraceability of the CryptoNote 2.0 protocol. We analyze possible solutions, discuss the relative merits and drawbacks to those solutions, and recommend improvements to the ByteRub protocol that will hopefully provide long-term resistance of the cryptocurrency against blockchain analysis. Our recommended improvements to ByteRub include a protocol-level network-wide minimum mix-in policy of n = 2 foreign outputs per ring signature, a protocol-level increase of this value to n = 4 after two years, and a wallet-level default value of n = 4 in the interim. We also recommend a torrent-style method of sending ByteRub output. We also discuss a non-uniform, age-dependent mix-in selection method to mitigate the other forms of blockchain analysis identified herein, but we make no formal recommendations on implementation for a variety of reasons. The ramifications following these improvements are also discussed in some detail. This research bulletin has not undergone peer review, and reflects only the results of internal investigation.
  mrl5: Ring Signature Confidential Transactions
  mrl5_abstract: This article introduces a method of hiding transaction amounts in the strongly decentralized anonymous cryptocurrency ByteRub. Similar to Bitcoin, ByteRub is a cryptocurrency which is distributed through a proof of work “mining” process. The original ByteRub protocol was based on CryptoNote, which uses ring signatures and one-time keys to hide the destination and origin of transactions. Recently the technique of using a commitment scheme to hide the amount of a transaction has been discussed and implemented by Bitcoin Core Developer Gregory Maxwell. In this article, a new type of ring signature, A Multi-layered Linkable Spontaneous Anonymous Group signature is described which allows for hidden amounts, origins and destinations of transactions with reasonable efficiency and verifiable, trustless coin generation. Some extensions of the protocol are provided, such as Aggregate Schnorr Range Proofs, and Ring Multisignature. The author would like to note that early drafts of this were publicized in the ByteRub Community and on the bitcoin research irc channel. Blockchain hashed drafts are available in [14] showing that this work was started in Summer 2015, and completed in early October 2015. An eprint is also available at http://eprint.iacr.org/2015/1098.
  mrl6: An Efficient Implementation of ByteRub Subaddresses
  mrl6_abstract: Users of the ByteRub cryptocurrency who wish to reuse wallet addresses in an unlinkable way must maintain separate wallets, which necessitates scanning incoming transactions for each one. We document a new address scheme that allows a user to maintain a single master wallet address and generate an arbitary number of unlinkable subaddresses. Each transaction needs to be scanned only once to determine if it is destinated for any of the user’s subaddresses. The scheme additionally supports multiple outputs to other subaddresses, and is as efficient as traditional wallet transactions.
  mrl7: Sets of Spent Outputs
  mrl7_abstract: This technical note generalizes the concept of spend outputs using basic set theory. The definition captures a variety of earlier work on identifying such outputs. We quantify the effects of this analysis on the ByteRub blockchain and give a brief overview of mitigations.
  mrl8: Dual Linkable Ring Signatures
  mrl8_abstract: This bulletin describes a modification to ByteRub's linkable ring signature scheme that permits dual-key outputs as ring members. Key images are tied to both output one-time public keys in a dual, preventing both keys in that transaction from being spent separately. This method has applications to non-interactive refund transactions. We discuss the security implications of the scheme.
  mrl9: Thring Signatures and their Applications to Spender-Ambiguous Digital Currencies
  mrl9_abstract: We present threshold ring multi-signatures (thring signatures) for collaborative computation of ring signatures, present a game of existential forgery for thring signatures, and discuss uses of thring signatures in digital currencies that include spender-ambiguous cross-chain atomic swaps for confidential amounts without a trusted setup. We present an implementation of thring signatures that we call linkable spontaneous threshold anonymous group signatures, and prove the implementation existentially unforgeable.
  mrl10: Discrete Logarithm Equality Across Groups
  mrl10_abstract: This technical note describes an algorithm used to prove knowledge of the same discrete logarithm across different groups. The scheme expresses the common value as a scalar representation of bits, and uses a set of ring signatures to prove each bit is a valid value that is the same (up to an equivalence) across both scalar groups.
  mrl11: Compact linkable ring signatures and applications
  mrl11_abstract: We describe an efficient linkable ring signature scheme, compact linkable spontaneous anonymous group (CLSAG) signatures, for use in confidential transactions. Compared to the existing signature scheme used in ByteRub, CLSAG signatures are both smaller and more efficient to generate and verify for ring sizes of interest. We generalize the construction and show how it can be used to produce signatures with coins of different type in the same transaction.
  iacr2020018: "Triptych: logarithmic-sized linkable ring signatures with applications"
  iacr2020018_abstract: Ring signatures are a common construction used to provide signer ambiguity among a non-interactive set of public keys specified at the time of signing. Unlike early approaches where signature size is linear in the size of the signer anonymity set, current optimal solutions either require centralized trusted setups or produce signatures logarithmic in size. However, few also provide linkability, a property used to determine whether the signer of a message has signed any previous message, possibly with restrictions on the anonymity set choice. Here we introduce Triptych, a family of linkable ring signatures without trusted setup that is based on generalizations of zero-knowledge proofs of knowledge of commitment openings to zero. We demonstrate applications of Triptych in signer-ambiguous transaction protocols by extending the construction to openings of parallel commitments in independent anonymity sets. Signatures are logarithmic in the anonymity set size and, while verification complexity is linear, collections of proofs can be efficiently verified in batches. We show that for anonymity set sizes practical for use in distributed protocols, Triptych offers competitive performance with a straightforward construction.
  cryptonote: Cryptonote Whitepapers
  cryptonote-whitepaper: Cryptonote Whitepaper
  cryptonote-whitepaper_para: This is the original cryptonote paper written by the cryptonote team. Reading it will give an understanding about how the cryptonote algorithm works in general.
  annotated: Annotated Whitepaper
  annotated_para: The ByteRub Research Lab released an annotated version of the cryptonote whitepaper. This is sort of like an informal review of the claims that are made line-by-line of the whitepaper. It also explains some of the harder concepts in relatively easy to understand terms.
  brandon: Brandon Goodell's Whitepaper Review
  brandon_para: This paper is a formal review of the original cryptonote paper by MRL researcher Brandon Goodell. He takes an in-depth look at the claims and mathematics presented in the cryptonote paper.


specs:
  fair_title: No premine, no instamine, no token
  fair_premine: ByteRub had no premine or instamine
  fair_token: ByteRub did not sell any token
  fair_presale: ByteRub had no presale of any kind
  pow_title: Proof of Work
  pow_name: CryptoNight
  pow_disclaimer: may change in the future
  diff_title: Difficulty retarget
  diff_freq: every block
  diff_base: based on the last 720 blocks, excluding 20% of the timestamp outliers
  block_time_title: Block time
  block_time_duration: 2 minutes
  block_time_disclaimer: may change in the future as long as emission curve is preserved
  block_reward_title: Block reward
  block_reward_amount: smoothly decreasing and subject to penalties for blocks greater than median size of the last 100 blocks (M100)
  block_reward_example1: see the
  block_reward_example_link: latest block
  block_reward_example2: coinbase transaction amount for current reward
  block_size_title: Block size
  block_size: dynamic, maximum of 2 * M100
  block_emission_title: Emission curve
  block_emission_main: "first, main curve: ~18.132 million coins by the end of May 2022"
  block_emission_tail: "then, tail curve: 0.6 BTR per 2-minute block, kicks in once main emission is done, translates to <1% inflation decreasing over time"
  block_emission_disclaimer1: see
  block_emission_disclaimer_link: charts and details
  supply_title: Max supply
  supply_amount: infinite
  sender_privacy_title: Sender privacy
  sender_privacy_mode: Ring signatures
  recipient_privacy_title: Recipient privacy
  recipient_privacy_mode: Stealth addresses
  amount_hidden_title: Amount obfuscation
  amount_hidden_mode: Ring confidential transactions

library:
  description: "Below are some publications, books or magazines available for you to download."
  books:
  - category: Books
    publications:
    - name: "Zero to ByteRub"
      file: "Zero-to-ByteRub-1-0-0.pdf"
      abstract: >
        A comprehensive conceptual (and technical) explanation of ByteRub.<br>
        We endeavor to teach anyone who knows basic algebra and simple computer science concepts like the ‘bit representation’ of a number not only how ByteRub works at a deep and comprehensive level, but also how useful and beautiful cryptography can be.
    - name: "Mastering ByteRub"
      file: "https://masteringbyterub.com/free-download.html"
      abstract: >
        A guide through the seemingly complex world of ByteRub.<br>
        It includes:
        <ul><li>A broad introduction to blockchains and the importance of privacy - ideal for non-technical users.</li>
        <li>Discussion of Bitcoin’s shortcomings and specific solutions provided by ByteRub.</li>
        <li>User stories (illustrating how ByteRub protects your privacy), analogies, examples, legal/ethical discussions, and code snippets illustrating key technical concepts.</li>
        <li>Details of the ByteRub decentralized network, peer-to-peer architecture, transaction lifecycle, and security principles.</li>
        <li>Introductions to technical foundations of ByteRub, intended for developers, engineers, software architects, and curious users.</li>
        <li>New developments such as Kovri, Bulletproofs, Multisignature, Hardware Wallets, etc.</li></ul>
        See <a href="https://masteringbyterub.com/">Mastering ByteRub</a> website for information.
  - category: Magazines
    publications:
    - name: "Revuo ByteRub Q4 2017"
      file: "Revuo-2017-Q4.pdf"
      abstract: >
        Quarterly ByteRub magazine, Q4 2017 edition.<br>
        In this issue, updates about: development, ByteRub Research Lab, Kovri, and community.
    - name: "Revuo ByteRub Q3 2017"
      file: "ByteRub-Revuo-3Q-2017.pdf"
      abstract: >
        Quarterly ByteRub magazine, Q3 2017 edition.<br>
        In this issue, updates about: development, ByteRub Research Lab, Kovri, community, Hardware, and Monerujo.

byterubpedia:
  add_new_button: Add New Entry
  add_new_text1: If there is an entry you'd like to modify or be added, please
  add_new_link: open an issue on this website's GitLab repository
  add_new_text2: or submit changes via pull request
  entries:
    account: Account
    address-book: Address Book
    address: Address
    airgap: Airgap
    atomic-units: Atomic Units
    base32-address: Base32 address
    base64-address: Base64 address
    blockchain: Blockchain
    block: Block
    bootstrap-node: Bootstrap-node
    bulletproofs: Bulletproofs
    canonically-unique-host: Canonically-unique host
    change: Change
    clearnet: Clearnet
    coinbase: Coinbase Transaction
    consensus: Consensus
    cryptocurrency: Cryptocurrency
    data-directory: Data Directory
    denominations: Denominations
    destination: Destination
    eepsite: Eepsite
    encryption: Encryption
    floodfill: Floodfill
    fluffyblocks: Fluffy Blocks
    fungibility: Fungibility
    garlic-encryption: Garlic-Encryption
    garlic-routing: Garlic Routing
    i2np: I2NP
    i2pcontrol: I2PControl
    i2p: I2P
    in-net: In-net
    java-i2p: Java I2P
    jump-service: Jump Service
    kovri: Kovri
    lease: Lease
    lease-set: Lease-Set
    locally-unique-host: Locally-unique host
    message: Message
    mining: Mining
    mnemonicseed: Mnemonic Seed
    network-database: Network Database
    node: Node
    ntcp: NTCP
    openalias: OpenAlias
    paperwallet: Paper Wallet
    paymentid: Payment ID
    pedersen-commitment: Pedersen Commitment
    reseed: Reseed
    ringCT: Ring CT
    ringsignatures: Ring Signature
    ring-size: Ring Size
    router-info: Router-Info
    scalability: Scalability
    signature: Cryptographic Signature
    smartmining: Smart Mining
    spendkey: Spend Key
    ssu: SSU
    stealthaddress: Stealth Address
    subscription: Subscription
    tail-emission: Tail Emission
    transaction: Transactions
    transports: Transports
    tunnel: Tunnel
    unlocktime: Transaction Unlock Time
    viewkey: View Key
    wallet: Wallet

blog:
  title_1: All
  title_2: Blog
  title_3: Posts
  tagged: Tagged under
  author: Posted by
  date: Posted at
  forum: Click here to join the discussion for this entry on the ByteRub Forum

tags:
  notags: There are no posts for this tag.
